// <auto-generated>
// Code generated by LUISGen MSVacationBot.json -cs Luis.MSVacationBot -o C:\Users\a-amsale\Downloads
// Tool github: https://github.com/microsoft/botbuilder-tools
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>
using Newtonsoft.Json;
using System.Collections.Generic;
using Microsoft.Bot.Builder;
using Microsoft.Bot.Builder.AI.Luis;
namespace Luis
{
    public partial class MSVacationBot: IRecognizerConvert
    {
        [JsonProperty("text")]
        public string Text;

        [JsonProperty("alteredText")]
        public string AlteredText;

        public enum Intent {
            ApproveVacation, 
            BalanceStatus, 
            CollectTeamVacation, 
            EmployeeStatusInquiry, 
            GetPendingApprovals, 
            None, 
            PublicHolidayAwareness, 
            ReassignVacation, 
            RequestVacation,
            Greetings
        };
        [JsonProperty("intents")]
        public Dictionary<Intent, IntentScore> Intents;

        public class _Entities
        {
            // Simple entities
            public string[] Alias;

            public string[] DateEnd;

            public string[] DateStart;

            public string[] Person;

            public string[] Timezone;

            public string[] VacationAmount;

            // Built-in entities
            public DateTimeSpec[] datetime;
            public DateTimeSpec[] newDate;
            public DateTimeSpec[] originalDate;

            public double[] number;

            public OrdinalV2[] ordinalV2;

            public string[] personName;

            // Lists
            public string[][] ApproveRejectList;

            public string[][] ChangesList;

            public string[][] Country;

            public string[][] DateUnits;

            public string[][] EmployeeType;

            public string[][] VacationTypes;

            // Instance
            public class _Instance
            {
                public InstanceData[] Alias;
                public InstanceData[] ApproveRejectList;
                public InstanceData[] ChangesList;
                public InstanceData[] Country;
                public InstanceData[] DateEnd;
                public InstanceData[] DateStart;
                public InstanceData[] DateUnits;
                public InstanceData[] EmployeeType;
                public InstanceData[] Person;
                public InstanceData[] Timezone;
                public InstanceData[] VacationAmount;
                public InstanceData[] VacationTypes;
                public InstanceData[] datetime;
                public InstanceData[] newDate;
                public InstanceData[] originalDate;
                public InstanceData[] number;
                public InstanceData[] ordinalV2;
                public InstanceData[] personName;
            }
            [JsonProperty("$instance")]
            public _Instance _instance;
        }
        [JsonProperty("entities")]
        public _Entities Entities;

        [JsonExtensionData(ReadData = true, WriteData = true)]
        public IDictionary<string, object> Properties {get; set; }

        public void Convert(dynamic result)
        {
            var app = JsonConvert.DeserializeObject<MSVacationBot>(JsonConvert.SerializeObject(result, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore }));
            Text = app.Text;
            AlteredText = app.AlteredText;
            Intents = app.Intents;
            Entities = app.Entities;
            Properties = app.Properties;
        }

        public (Intent intent, double score) TopIntent()
        {
            Intent maxIntent = Intent.None;
            var max = 0.0;
            foreach (var entry in Intents)
            {
                if (entry.Value.Score > max)
                {
                    maxIntent = entry.Key;
                    max = entry.Value.Score.Value;
                }
            }
            return (maxIntent, max);
        }
    }
}
